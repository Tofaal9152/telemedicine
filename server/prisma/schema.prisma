generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                 String   @id @default(cuid())
  email              String   @unique
  name               String
  password           String?
  hashedRefreshToken String?
  role               Role     @default(PATIENT)
  age                String?
  gender             Gender?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  doctor  Doctor?
  patient Patient?
  admin   Admin?
}

model Doctor {
  id         String  @id @default(cuid())
  userId     String  @unique
  specialty  String
  bio        String
  experience String
  isApproved Boolean @default(false)
  visitFee   Float   @default(500)

  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  Appointment Appointment[]
}

model Patient {
  id     String @id @default(cuid())
  userId String @unique

  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  Appointment Appointment[]
}

model Admin {
  id     String @id @default(cuid())
  userId String @unique

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Appointment {
  id        String            @id @default(cuid())
  patientId String
  doctorId  String
  tranId    String?           @unique
  status    AppointmentStatus
  createdAt DateTime          @default(now())

  patient Patient @relation(fields: [patientId], references: [id], onDelete: Cascade)
  doctor  Doctor  @relation(fields: [doctorId], references: [id], onDelete: Cascade)
}

enum Role {
  ADMIN
  DOCTOR
  PATIENT
}

enum Gender {
  male
  female
}

enum AppointmentStatus {
  PAID
  PENDING
  FAILED
  CANCELED
}
